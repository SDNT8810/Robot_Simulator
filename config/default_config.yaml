# Timing Parameters
timing:
  time_step: 0.002  # Simulation and control time step (s)
  total_time: 2.0  # Total simulation time (s)

# logging Parameters
logging:
  log_file: "simulation_log.txt"  # Log file name
  run_file: "runs"  # Run log file name
  run_name: "test"  # Name of the run
  log_format: "txt"  # Log format (txt, csv, json, etc.)
  log_path: "./logs/"  # Path to save logs
  log_data:
    - time
    - position
    - velocity
    - actuator
    - safety_violation
    - control_input
  level: "INFO"  # Can be DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s - %(levelname)s - %(message)s"
  saving_run_frequency: 30  # N Log every seconds - increased from 10
  log_frequency: 0.5  # Log data every N (s) - increased from 0.1
  visualization_frequency: 0.05  # Update visualization every N steps 

# Visualization Parameters
visualization:
  mode: "MPC"  # Control mode (MPC, PID)
  plots:  # List of plots to visualize (State, Velocity, Error, SafetyViolation, ControlInput)
    - position: true  # Robot position plot
    - State: true  # Robot Velocity State plot
    - Velocity: true  # Speed and Angular Velocity plot
    - Error: true  # Error plot
    - SafetyViolation: true  # Safety violation plot
    - ControlInput: true  # Control input plot
  enabled: true  # Enable visualization
  view_time_window: 15.0  # Time window for plots (s)
  plot_margin: 8  # Y-axis margin
  position_view_radius: 1.0  # XY plot radius (m)
  fontsize: 8  # Font size for plots
  wheel_scale:
    width: 0.3  # Wheel visualization width scale
    length: 1.5  # Wheel visualization length scale
  margins:
    mode: "Auto_Center"  # Visualization mode (Auto_Center, Fixed)
    fixed_center:
      x: 0.0  # Fixed X-axis center
      y: 0.0  # Fixed Y-axis center
    margin: 8  # Auto center margin
    plot: 8  # Plot margins

# Simulation Conditions
initial:
  state:
    position: [0.0, 0.0, 0.0]  # [x, y, ψ]
    velocity: [0.0, 0.0, 0.0]  # [vx, vy, ω]
    actuator: [0.0, 0.0, 0.0, 0.0]  # Motor currents [I_FL, I_FR, I_RL, I_RR]
  steering:
    front: 0.0  # Front steering angle (rad)
    rear: 0.0  # Rear steering angle (rad)

# Robot Configuration
robot:
  # Physical parameters (from paper)
  mass: 2449.0  # kg
  inertia: 815.0  # kg⋅m²
  wheelbase: 1.8  # m (Lf, Lr)
  track_width: 0.9  # m (Wl, Wr)
  wheel_radius: 0.386  # m
  
  model: "kinematics"  # Type of simulation (kinematics, dynamics)

  # Tire parameters
  tire:
    normal_force: 6000.0  # N per tire
    roll_resistance: 0.015  # Rolling resistance coefficient
    friction:
      max: 1.0  # Maximum friction coefficient
      B: 10.0  # Stiffness factor
      C: 1.9  # Shape factor
      D: 1.0  # Peak factor
      E: 0.97  # Curvature factor
      
  # Motor parameters - Adjusted for better response
  motor:
    resistance: 0.3  # Ohms (R)
    inductance: 0.0001  # H (L)
    torque_constant: 0.12  # N⋅m/A (K)
    back_emf_constant: 0.12  # V⋅s/rad
    gear_ratio: 15.0  # Gear reduction (rg)
    max_voltage: 12.0  # V
    max_current: 40.0  # A
    max_torque: 150.0  # N⋅m
    efficiency: 0.9  # Motor efficiency
    inertia: 0.001  # kg⋅m²
    damping: 0.1  # N⋅m⋅s/rad
    voltage_speed_factor: 0.1  # Reduced from 0.1 to make the robot move faster
    nominal_voltage: 12.0  # Nominal voltage (V)

  # Slip and uncertainty parameters
  slip:
    max_ratio: 0.1  # Maximum longitudinal slip ratio (λ_max)
    max_angle: 0.05  # Maximum lateral slip angle (rad)
    lambda_max: 0.15  # Maximum total slip
    uncertainty: 0.2  # Bounded uncertainty (γ)

# Safety Parameters
safety:
  # Distance thresholds (from paper)
  rho_0: 1.5  # Increased minimum front distance (m) - was 2.0
  rho_1: 2.0  # Increased minimum side distance (m) - was 3.0
  theta_0: 1.5  # Increased angular threshold (rad), was 2.36 (~143 degrees)
  
  # CBF dynamics parameters
  cbf_dynamics:
    margin_slope: 1.5  # Increased from 1.0 - Even stronger safety margin increase with velocity
    activation_sharpness: 15.0  # Increased from 12.0 - Much more aggressive activation of safety constraints
    curvature_factor: 1.2  # Increased from 1.0 - Allow slightly more speed in curves
    velocity_factor: 0.8  # Increased from 0.6 - More aggressive acceleration with speed
    angular_velocity_limit: 2.5  # Increased from 2.0 - Allow faster turning when needed
    
  # Speed and acceleration limits (from paper)
  limits:
    velocity:
      base: 3.0  # Base maximum velocity (m/s)
      slope: -1.0  # Velocity reduction per meter
      min: -2.0  # Allow negative velocity for backward movement (m/s)
      max: 3.0  # Absolute maximum velocity (m/s)
      omega_max: 3.0  # Maximum angular velocity (rad/s)
    acceleration:
      base: 1.0  # Base maximum acceleration (m/s²)
      slope: -1.0  # Acceleration reduction per meter
      min: -2.0  # Minimum allowed acceleration (m/s²)
      max: 2.0 
    nu_max:
      base: 1.0  # Base maximum acceleration (m/s²)
      slope: -1.0  # Acceleration reduction per meter
      min: -2.0  # Minimum allowed acceleration (m/s²)
      max: 2.0  # Maximum allowed acceleration (m/s²)

  # Yielding behavior
  yielding:
    start_distance: 2.0  # Increased from 3.0 - Start slowing down much earlier
    stop_distance: 1.0  # Increased from 1.5 - Maintain even more distance from obstacles
    recovery_rate: 4.0  # Increased from 3 - Recover from safety violations more quickly
    max_avoidance_force: 1.0  # Maximum force to apply for avoidance
    avoidance_gain: 1.5  # Gain for avoidance behavior
    
  # Safety monitoring
  monitoring:
    violation_threshold: -0.02  # Further reduced from -0.03 - Even more sensitive to violations
    max_violations: 3  # Reduced from 5 - Much less tolerance for violations
    min_scale_factor: 0.02  # Reduced from 0.05 - Allow even more aggressive control when needed
    emergency_stop_distance: 0.8  # Distance at which to perform emergency stop (m)

  # CBF parameter
  alpha: 1.0  # CBF convergence rate

# Controller Parameters (From Equation 12 in paper)
controller:
  # Control type
  type: "PID"  # Type of controller (FastMPC, BiLVLMPC, SimplifiedMPC, PID, etc.)
  front_rear_scale: -1.0 # Front-rear steering scale factor
  # PID parameters - Simplified for direct control
  pid:
    Kp: [2.0, 2.0, 1.5]  # Higher proportional gain for direct response
    Ki: [0.3, 0.3, 0.2]  # Lower integral gain to reduce oscillations
    Kd: [0.5, 0.5, 0.4]  # Higher derivative gain for damping
    
    max_output:  12.0  # Maximum output for each dimension
    min_output: -12.0  # Minimum output for each dimension
    
    deadband: [0.12, 0.12, 0.07]  # Increased deadband to prevent oscillations near zero error
    int_windup_limit: 2.0  # Anti-windup limit
    feed_forward_factor: 0.7  # Reduced from 0.8 to prevent overshooting

  # MPC parameters
  mpc:
    # Prediction horizon
    prediction_horizon: 5  # Increased from 15 for longer planning
    control_horizon: 1  # Increased from 1 for smoother control
    time_step: 0.02  # Reduced from 0.2 for more precise control
    
    # Control weights
    weights:
      Q1: [1.0, 1.0, 0.5]  # Increased position tracking weights
      Q2: [0.2, 0.2, 0.1]  # Increased velocity tracking weights
      R: [0.05, 0.05, 0.005, 0.005, 0.005, 0.005]  # Reduced input weights to allow more aggressive control
  
    # Constraints
    constraints:
      steering:
        min: [-0.5, -0.5]  # Minimum steering angles [front, rear] (rad)
        max: [0.5, 0.5]   # Maximum steering angles [front, rear] (rad)
        rate_min: [-0.1, -0.1]  # Minimum steering rates (rad/s)
        rate_max: [0.1, 0.1]   # Maximum steering rates (rad/s)
      voltage:
        min: [-12.0, -12.0, -12.0, -12.0]  # Minimum motor voltages (V)
        max: [12.0, 12.0, 12.0, 12.0]      # Maximum motor voltages (V)
        rate_min: [-2.0, -2.0, -2.0, -2.0]  # Minimum voltage rates (V/s)
        rate_max: [2.0, 2.0, 2.0, 2.0]      # Maximum voltage rates (V/s)
  
# scenario
scenario:
  # Scenario name
  name: "circle"  # "circle" or "to_goal" # Name of the scenario
  
  circle:
    initial_position: [4.3, 0.0, 90.0]  # Initial position [x, y, theta]
    radius: 4.0  # Radius of the circle (m)
    center: [0.0, 0.0]  # Center of the circle [x, y]
    speed: 2.5  # Further increased target speed for more agility testing
    
    # Static human obstacles (from paper scenario)
    humans:
      positions:
        - [-4.5, 4.0, 0.0]  # First  human [x, y, ψ]
      velocities:
        - [0.0, 0.0, 0.0]   # Static humans
       
  to_goal:
    # Path to goal
    initial_position: [0.0, -4.0, 90.0]  # Initial position [x, y, theta]
    initial_speed: [0.0, 0.0, 0.0]  # Initial speed [vx, vy, omega]
    goal: [0.0, 8.0]  # Goal position [x, y]
    goal_tolerance: 1.0  # Tolerance for reaching the goal (m)
    desired_velocity: 1.0  # Reduced from 1.0 to start slower
    
    # Dynamic obstacles
    dynamic_obstacles:
      count: 2  # Number of dynamic obstacles
      behavior: "random"  # Behavior of dynamic obstacles (random, predictable)

    # Static human obstacles (from paper scenario)
    humans:
      positions:
        - [-4.5, 4.0, 0.0]  # First  human [x, y, ψ]
        - [4.5, 4.0, 0.0]   # Second human [x, y, ψ]
        - [-1.0, 0.0, 0.0]   # third  human [x, y, ψ]
      velocities:
        - [0.0, 0.0, 0.0]   # Static humans
        - [0.0, 0.0, 0.0]
        - [0.0, 0.0, 0.0]
